# services/supabase_service.py

from supabase import create_client, Client
import os
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()  # üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env –¥–æ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_SERVICE_ROLE_KEY")

supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

def sync_user_to_supabase(user_info: dict) -> str:
    """
    –°–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ email –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ UUID.
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —á–∏—Ç–∞–µ–º –µ–≥–æ ID.
    """
    email = user_info["email"]

    # üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    existing = supabase.table("users").select("id").eq("email", email).execute()
    if existing.data:
        return existing.data[0]["id"]  # –ï—Å–ª–∏ –µ—Å—Ç—å ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º UUID

    # üìÖ –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ
    result = supabase.table("users").insert({
        "email": email,
        "name": user_info.get("name"),
        "avatar_url": user_info.get("picture", ""),
        "created_at": datetime.utcnow().isoformat()
    }).execute()

    return result.data[0]["id"]  # UUID —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

def fetch_prompts(user_id: str):
    """ –ß—Ç–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–º—Ç–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ user_id """
    return supabase.table("prompts").select("*").eq("user_id", user_id).execute()

def save_prompt_to_supabase(prompt: dict):
    """ –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–æ–º—Ç –≤ –±–∞–∑—É """
    return supabase.table("prompts").upsert(prompt).execute()
