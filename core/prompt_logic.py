# core/prompt_logic.py

import requests
import streamlit as st
from constants import BACKEND_URL

def validate_prompt_input(name: str, hint: str) -> bool:
    if not name.strip():
        st.error("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–º—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
        return False
    if not hint.strip():
        st.error("‚ùå –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø—Ä–æ–º—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π.")
        return False
    return True

def save_prompt(name: str, hint: str, param1: str, param2: str):
    # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    st.session_state.prompts[name] = {
        "instruction": hint,
        "param1": param1,
        "param2": param2
    }

    user_id = st.session_state.get("user", {}).get("id", "")
    if not user_id:
        st.error("‚ùå –ù–µ—Ç user_id")
        return

    payload = {
        "name": name,
        "instruction": hint,
        "param1": param1,
        "param2": param2,
        "user_id": user_id
    }

    headers = {}
    if "access_token" in st.session_state:
        headers["Authorization"] = f"Bearer {st.session_state['access_token']}"

    try:
        # üîÅ –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        put_url = f"{BACKEND_URL}/prompts/{user_id}/{name}"
        put_response = requests.put(put_url, json=payload, headers=headers)

        if put_response.status_code == 200:
            st.success("‚úÖ –ü—Ä–æ–º—Ç –æ–±–Ω–æ–≤–ª—ë–Ω!")
            return

        # üì§ –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Üí —Å–æ–∑–¥–∞—ë–º
        post_url = "http://localhost:8000/prompts"
        post_response = requests.post(post_url, json=payload, headers=headers)
        print("üì° –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", post_response.status_code, post_response.text)

        if post_response.status_code == 200:
            st.success("‚úÖ –ü—Ä–æ–º—Ç —Å–æ–∑–¥–∞–Ω!")
        else:
            st.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–º—Ç.")
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {e}")

def delete_prompt(name: str):
    user_id = st.session_state.get("user", {}).get("id", "")
    if not user_id:
        st.warning("‚ö†Ô∏è –ù–µ—Ç user_id")

    url = f"{BACKEND_URL}/prompts/{user_id}/{name}"
    try:
        response = requests.delete(url)
        print(f"üß® DELETE URL: {url}")
        if response.status_code == 200:
            st.success("üóëÔ∏è –ü—Ä–æ–º—Ç —É–¥–∞–ª—ë–Ω!")
            st.session_state.prompts.pop(name, None)
            if st.session_state.selected_prompt == name:
                st.session_state.selected_prompt = None
            st.rerun()
        else:
            st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º—Ç.")
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {e}")