import streamlit as st
from streamlit_google_auth import Authenticate
import json
from services.supabase_service import sync_user_to_supabase  # üîó –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Supabase

# üìå –í—ã–≤–æ–¥–∏–º client_id –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—É–¥–æ–±–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ Google)
with open("google_credentials.json") as f:
    creds = json.load(f)
    print("üß™ –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π client_id:", creds["web"]["client_id"])


def get_authenticator():
    """–°–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞ Google"""
    if "authenticator" not in st.session_state:
        st.session_state["authenticator"] = Authenticate(
            secret_credentials_path="google_credentials.json",
            cookie_name="my_cookie",
            cookie_key="super_secret_key",
            redirect_uri="http://localhost:8501"
        )
    return st.session_state["authenticator"]


def setup_authentication():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∏–≤—è–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ Supabase"""
    # üß© –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª—é—á, –∏–Ω–∞—á–µ `check_authentification()` –º–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å
    if "connected" not in st.session_state:
        st.session_state["connected"] = False

    authenticator = get_authenticator()
    authenticator.check_authentification()
    authenticator.login()

    if st.session_state.get("connected"):
        # ‚úÖ –ü–æ–ª—É—á–∞–µ–º user_info –æ—Ç Google
        user_info = st.session_state.get("user_info", {})

        # üîó –°–æ—Ö—Ä–∞–Ω—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase –∏ –ø–æ–ª—É—á–∞–µ–º UUID
        user_uuid = sync_user_to_supabase(user_info)

        # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ session_state
        st.session_state["user"] = {
            "id": user_uuid,  # ‚òëÔ∏è –≠—Ç–æ UUID –∏–∑ —Ç–∞–±–ª–∏—Ü—ã `users`, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ FK –≤ prompts
            "email": user_info.get("email"),
            "name": user_info.get("name"),
            "avatar_url": user_info.get("picture"),
        }
        return user_info

    return None